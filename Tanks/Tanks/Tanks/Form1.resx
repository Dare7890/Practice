<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>118, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC0
        EAAAAk1TRnQBSQFMAgEBBgEAAQgBAAEIAQABFAEAARQBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABUAMAASgDAAEBAQABCAUAAYABDBgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/AQABEgHtCBwB9wQc
        AfcDHAEHARQBFQEREUMpAAFEAUUCRgFMAkUBRgFFAUsBRQJGAUUBSwFFAkYBdAISEkMpAAEBAyUBKwEf
        AiUBRgFLAkYBJQFGAUsCRgElAW8B6gESBxQBFQFDBxQCQykAAQEERgHpA0YBSwRGAUsDRgFvAeoBbQHq
        AW0EEwEUARUBQwHqAhICEwESARMCQykAAUQIRQFuBEUBbgNFAW8E6gUTARUBQwHqARIFEwJDKQABRAFL
        AkUDSwJFB0sCbgF0A+oBbQITARQBEwEUARUBQwHqARIFEwJDKQABJAElAiQCJQFMAUUBJAIlAksDJQJL
        AXQE6gUTARUBQwHqARIFEwJDKQABJAElAh8DJQEkAR8CJQIkAyUCRQFvAeoBbQESAeoFEgEVAUMBbQMS
        AeoCEgJDKQABAQXpAgED6QIBA+kCRQFvA+oBbQESA+oBEgIVAuoBbQTqAkMpAAHqCm4C6wNuAusBHAPq
        ARIFQwIRBEMDFQERAUMpAAFEBEsBRANLAW4BRQNLAW4DSwEcA+oBEg4VAkMpAAEeASQCKwElAiQBKwFM
        AUsBRgIrAUwBSwFGAisBdATqBRMCFAQTARQCEwJDKQABAQEkAyUBHwEkAiUBSwQlAUsDJQFvBOoOEwJD
        KQABAQjpAUUD6QFFAWgBRQLpAW8BbQLqARIOEwJDKQAB6ghuAesEbgHrA24BHAPqARIOEwJDKQABKgFM
        AUYBJAIrAkwBJAJMAksBJAFMASsBSwFuAXQD6gESDhMCQykAASQBKwElAR8CJQFMAUYBJAIlAksBJQEr
        ASUCSwF0EuoCQykAASQBJQEkAR8DJQEkAR8CJQJFAyUBRQFLAW8C6gESD+oCFCkAAR4FAQIeAwECRAMB
        AkQBbhPqARM7AAESAhUBQwEVDEMBFQNDKAATbQHtE20B7RP3AQcBEgHtA/cFHAH3CBwBBwEPAg4BDwEQ
        AUMCFQFDAhECFQFDAhECFQERAW0CDgFDAhUBFAEiCQ8BFQEiAQ8BbQLrEW4B9wEAAUQBRQFMAUsETAFL
        AesCRQVMAUYBdAEPAg4BDwEQARIBbQHqARMCFQJtAeoBFAFDARIB6gEVAW0CDgFDA0oKIgEVASIBDwFt
        AW4ESwFuAkUHSwJuAkUBdAEAAUQCJQQrASUBRgHrAUUCJQMrAiUBbwEPAw4BEQFtAewBbQESARQBFQFt
        AesBbQETARUB6gESARUBbQIOAyIBKgEjCyIBDwFtAUwEKwFuASQCJQMrAiUBKwJLAUUBJQF0AQABRAFF
        BiUBRgHrAUUCRgUlAW8CDgIPAREB6wHsAeoBFQIUAhUEFAEVARABbQEOAQ8BIgEpASMBMQMqAikBIwEq
        AgMBIgEjASIBDwFtAesBRQMlBSsBSwEBAiQFKwF0AQABRAhFAesIRQFvARAEDwERAe8B7AETA0MBFAFt
        AuwBFAEQAQ8BbQIOAUoBSwEqATEEAwMqAgMBIgEpASMBDwFtAUwEJQFLASQCJQIrAyUBKwJLAUUBJQFv
        AQABEgNuAesJbgHrAW4CSwEcBA8CDgEHAewBFANDARUBEgH4Ae0BFAERARABbQEOAQ8BSgFRAQMBMQEq
        AykDIwIpASIBKQEiAQ8BbQFuASQBJQdGAUsBJAIlBUYBbwELAUUBRgFMAUsBbgJFAkwCRgJMAUsB6wJF
        AUwBdAEOAg8CDgEPAQcB7wHrA+oBFAETAW0B7QESAeoBEwFtAg8BRAIpATEBKgEDASkBIwEpAiMFIgEP
        AW0BRQEfAukDRgLpAUYBRQEBAR8BJQRGAekBbwELASQCJQErAW4C6QYlAUYB6wFFASUBKwF0AQ4EEQFD
        Ae8B8QEHApIB9wFtARMBbQHtAW0B7AJtAQ8BDgEiAiMBMQE4AVgBUgEqAQMBSwEjBSIBDwFtAUUEHwFL
        CR8DRQEfAW8BCwEkAiUBRgFuAekEJQEkAiUBRgHrAUUCJQFvAQ4BbQTsAe8B8AEHAZIB7wEHAW0BFAFt
        Ae0BFAEQAQ4BbQEPAQ4BKQIDATEBOAFYAVIBKgEpASMEIgEpASIBDwFtAesBRAgBAUUBRAcBAW4BCwRF
        AesJRQHrA0UBbwEOARQDEwESAQcB8gEHAewB6wGSAW0BEwFtAe0BFAEQAQ4BbQIOAUoBUQEDATEBOAI3
        ATABMQEDASMDIgFKAUQBEQFtAW4HbQJuAusDbgRtAZIBAAHqCEsB6wJuBksBdAEOARACEQEQAREBBwHz
        AQcC7AHtAW0BFAFtAe0BFAERARABbQEPAQ4BKQEDASoCMQI3ATABMQEwASkBIwIiAiMBEAFtAesDbgPr
        CG4D6wFuAfcBAAFEAUUGKwFLAesCRQFMASUEKwF0AQ8BDgIPAQ4BDwEHAfIB8AMHAesBEwFtAe0BEgFt
        ARIBbQEPAQ4BIgIjAzEBNwIxATABKgEjBSIBbQHrAUUBSwluAksFbgGTAQ4BRAEkBiUBRQHrAUUBJAYl
        AW8FDwEQAQcC8gPzAe0BbQH4AZIBbQGSAfgBbQIPASICIwExASoCMQI4AioCAwQiAW0BbgEkAUYHTAFL
        AUUBJAElBUwBdAEOAUQBRQbpAUUB6wFFB+kBbwUPARUBBwLwA/MBBwH3Au8BEgEQAQ4BbQIPAUoBUQEq
        BTABOAEqAQMBMAEDASMBKQEiAQ8BbQFMASsDJQFLAR8CJQErASUDKwElAUsBbgFFAR8BbwEAAeoIbgHr
        CG4BHAMOAQ8BEQFtA+0DkgHtA+wBbQESARUBbQIOAhEFIgEjATcBIwELAiIEDwFtAW4BJAMlASsEJQFL
        AiQGJQFvAQsBKgNMAW4BRQJGBkwB6wFFAUYBTAF0BA4BEAHqAW0B6wFtARIBEwLrAW0B6gETAeoBbQEU
        AW0BDwEOBw8BIgFYASIBDgMPAQ4CDwFtAUsBRgMlAUsBJAIlAkYEJQJLAUUBJQFvAQsBKgIrAUwBbgHp
        AiUFKwFMAesBRQElASsBdAQOARAB6gL4AeoBFQFDAfgB7AFtARMBQwHqAesBEgFtAQ8BDgUPAg4BQwFY
        AUMDDwEQAw8BbQFLAUYDJQFFAQEBHwElAkYBJAMlAkUB6QEfAW8BCwEkAyUBbgHpAR8GJQFFAesBRQEf
        ASUBbwQOARABbQHsAfgB6gIVAuwBbQETARUBbQHrARIBbQEPAQ4CDwQOAQ8BQwFRAREEDwEOAg8CbQQf
        AekEHwFFAQEEHwHpAh8BbwELAR4DAQHqCQEB6gMBAW4BDw0OAQ8BEAEPAQ4BDwFtARAEDwMOAg8BDgMP
        ARABDwIOAQ8BbQQfAekBbgHpCB8BRQFuAUUBHwFvAQ4SAAESAUIBTQE+BwABPgMAASgDAAFQAwABKAMA
        AQEBAAEBBQAB4AEBFgAD//8A4gAL
</value>
  </data>
</root>